{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","userId","handleClickUsers","className","map","todo","key","id","classNames","completed","type","checked","readOnly","title","onClick","request","url","fetch","then","res","json","data","getUsers","CurrentUser","state","user","currentId","addUser","a","props","setState","this","name","email","phone","handleClear","React","Component","App","todosFilter","selectedUserId","handleChangeInput","e","value","target","filter","toLowerCase","includes","handleChangeSelect","handleRandomize","sort","Math","random","todosRes","placeholder","onChange","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fe83b15.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport { PropTypes } from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoList = ({ todos, userId, handleClickUsers }) => (\n  <div className=\"TodoList\">\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames('TodoList__item', {\n              'TodoList__item--checked': todo.completed,\n              'TodoList__item--unchecked': !todo.completed,\n            })}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className={classNames('TodoList__user-button', 'button', {\n                'TodoList__user-button--selected': userId !== todo.userId,\n              })}\n              type=\"button\"\n              onClick={() => handleClickUsers(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  userId: PropTypes.number.isRequired,\n  handleClickUsers: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(res => res.json())\n  .then(res => res.data);\n\nexport const getTodos = () => request('/todos/');\nexport const getUsers = userId => request(`/users/${userId}/`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { PropTypes } from 'prop-types';\nimport { getUsers } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n    currentId: 0,\n  }\n\n  componentDidMount() {\n    this.addUser();\n  }\n\n  componentDidUpdate() {\n    if (this.props.userId !== this.state.currentId) {\n      this.addUser();\n    }\n  }\n\n  addUser = async() => {\n    const { userId } = this.props;\n    const user = await getUsers(userId);\n\n    if (!user) {\n      return;\n    }\n\n    this.setState({\n      user,\n      currentId: userId,\n    });\n  }\n\n  render() {\n    const { name, email, phone } = this.state.user;\n    const { userId, handleClear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${userId}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"button__clear\"\n          onClick={handleClear}\n        >\n          Clear\n        </button>\n      </div>\n\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  handleClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    todosFilter: [],\n    selectedUserId: 0,\n  }\n\n  async componentDidMount() {\n    const todosRes = await getTodos();\n    const todos = await todosRes\n      .filter(todo => todo.title && todo.id && todo.userId);\n\n    this.setState({\n      todos,\n      todosFilter: todos,\n    });\n  }\n\n  handleChangeInput = (e) => {\n    const { value } = e.target;\n\n    this.setState(state => ({\n      todosFilter: state.todos.filter(todo => todo.title.toLowerCase()\n        .includes(value.toLowerCase())),\n    }));\n  };\n\n  handleChangeSelect = (e) => {\n    const { value } = e.target;\n    const { todos } = this.state;\n\n    this.setState({ todosFilter: todos\n      // eslint-disable-next-line no-nested-ternary\n      .filter(todo => (value === 'active'\n        ? todo.completed\n        : value === 'completed'\n          ? (!todo.completed)\n          : todo)) });\n  }\n\n  handleRandomize = () => {\n    this.setState(state => ({\n      todosFilter: [...state.todos].sort(() => Math.random() - 0.5),\n    }));\n  }\n\n  handleClickUsers = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  handleClear = () => this.setState({ selectedUserId: 0 })\n\n  render() {\n    const { todosFilter, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <h2>Todos:</h2>\n          <div className=\"sidebar\">\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter title\"\n              onChange={this.handleChangeInput}\n            />\n            <select\n              className=\"select\"\n              onChange={this.handleChangeSelect}\n            >\n              {['all', 'active', 'completed'].map(item => (\n                <option key={item}>{item}</option>\n              ))}\n            </select>\n            <button\n              type=\"button\"\n              className=\"randomize\"\n              onClick={this.handleRandomize}\n            >\n              Randomize\n            </button>\n          </div>\n          <TodoList\n            todos={todosFilter}\n            userId={selectedUserId}\n            handleClickUsers={this.handleClickUsers}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClear={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}